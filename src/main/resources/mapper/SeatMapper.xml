<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.ibooking.mgb.mapper.SeatMapper">
  <resultMap id="BaseResultMap" type="com.huawei.ibooking.bean.po.Seat">
    <id column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="has_socket" jdbcType="TINYINT" property="hasSocket" />
    <result column="studyroom_id" jdbcType="INTEGER" property="studyroomId" />
  </resultMap>

  <resultMap id="SeatStatusMap" type="com.huawei.ibooking.bean.Do.seat.QuerySeatResult">
    <id column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="studyroom_id" jdbcType="INTEGER" property="studyroomId" />
    <result column="is_booking" jdbcType="INTEGER" property="isBooking" />
    <result column="has_socket" jdbcType="TINYINT" property="hasSocket"/>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seat_id, has_socket, studyroom_id
  </sql>
  <select id="selectByExample" parameterType="com.huawei.ibooking.bean.po.SeatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `seat`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `seat`
    where seat_id = #{seatId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `seat`
    where seat_id = #{seatId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huawei.ibooking.bean.po.SeatExample">
    delete from `seat`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huawei.ibooking.bean.po.Seat">
    insert into `seat` (seat_id, has_socket, studyroom_id
      )
    values (#{seatId,jdbcType=INTEGER}, #{hasSocket,jdbcType=TINYINT}, #{studyroomId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huawei.ibooking.bean.po.Seat">
    insert into `seat`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="hasSocket != null">
        has_socket,
      </if>
      <if test="studyroomId != null">
        studyroom_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="hasSocket != null">
        #{hasSocket,jdbcType=TINYINT},
      </if>
      <if test="studyroomId != null">
        #{studyroomId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huawei.ibooking.bean.po.SeatExample" resultType="java.lang.Long">
    select count(*) from `seat`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `seat`
    <set>
      <if test="row.seatId != null">
        seat_id = #{row.seatId,jdbcType=INTEGER},
      </if>
      <if test="row.hasSocket != null">
        has_socket = #{row.hasSocket,jdbcType=TINYINT},
      </if>
      <if test="row.studyroomId != null">
        studyroom_id = #{row.studyroomId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `seat`
    set seat_id = #{row.seatId,jdbcType=INTEGER},
      has_socket = #{row.hasSocket,jdbcType=TINYINT},
      studyroom_id = #{row.studyroomId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huawei.ibooking.bean.po.Seat">
    update `seat`
    <set>
      <if test="hasSocket != null">
        has_socket = #{hasSocket,jdbcType=TINYINT},
      </if>
      <if test="studyroomId != null">
        studyroom_id = #{studyroomId,jdbcType=INTEGER},
      </if>
    </set>
    where seat_id = #{seatId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huawei.ibooking.bean.po.Seat">
    update `seat`
    set has_socket = #{hasSocket,jdbcType=TINYINT},
      studyroom_id = #{studyroomId,jdbcType=INTEGER}
    where seat_id = #{seatId,jdbcType=INTEGER}
  </update>

  <select id="getSeatBookingStatus" resultMap="SeatStatusMap">
    <!-- 查询有预约的座位 -->
    SELECT DISTINCT seat_id, studyroom_id, has_socket, is_booking
    FROM (
      SELECT s.seat_id, s.studyroom_id, s.has_socket, 'true' as is_booking
      FROM seat s
      JOIN reservation r ON s.seat_id = r.seat_id
      WHERE s.studyroom_id = #{studyroomId}
      AND r.start_time >= #{startTime}
      AND r.end_time &lt; DATE_ADD(#{startTime}, INTERVAL 1 DAY)

      UNION ALL

      <!-- 查询没有预约的座位 -->
      SELECT seat_id, studyroom_id, has_socket, 'false' AS is_booking
      FROM seat
      WHERE seat_id NOT IN (
      SELECT DISTINCT seat_id
      FROM reservation r
      WHERE studyroom_id = #{studyroomId}
      AND r.start_time >= #{startTime}
      AND r.end_time &lt; DATE_ADD(#{startTime}, INTERVAL 1 DAY)
      )
    ) AS combined
  </select>


</mapper>